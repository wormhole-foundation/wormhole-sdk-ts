name: Update Documentation

on:
  release:
    types: [published]

jobs:
  update-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from release tag (e.g. v3.0.0)
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "LATEST_VERSION=$TAG_VERSION" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Update package.json version to match release
        run: |
          jq --arg ver "$LATEST_VERSION" '.version = $ver' package.json > tmp.json && mv tmp.json package.json

      - name: Generate documentation
        run: npm run docs

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git checkout -b update-docs-${{ env.LATEST_VERSION }}

          git add package.json docs/
          git commit -m "Update package.json and docs for SDK version $LATEST_VERSION" || exit 0

          git push origin update-docs-${{ env.LATEST_VERSION }}

      - name: Create a pull request using GitHub CLI
        run: |
          gh pr create --title "Update package.json and docs for SDK v${{ env.LATEST_VERSION }}" \
                       --body "This PR updates the documentation **and** fixes the version field in package.json to match the latest SDK release: **${{ env.LATEST_VERSION }}**." \
                       --base main \
                       --head update-docs-${{ env.LATEST_VERSION }} \
                       --label "automated,documentation"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
