import { encoding, serialize } from "@wormhole-foundation/sdk";
import { mocks } from "@wormhole-foundation/sdk-definitions/testing";

(async function () {
  const guardians = mocks.devnetGuardianSet();

  // Some VAAs to resign
  const toSign = [
    "010000000001006c9967aee739944b30ffcc01653f2030ea02c038adda26a8f5a790f191134dff1e1e48368af121a34806806140d4f56ec09e25067006e69c95b0c4c08b8897990000000000000000000001000000000000000000000000000000000000000000000000000000000000000400000000001ce9cf010000000000000000000000000000000000576f726d686f6c6552656c617965720100000002000000000000000000000000cc680d088586c09c3e0e099a676fa4b6e42467b4",
    "01000000000100894be2c33626547e665cee73684854fbd8fc2eb79ec9ad724b1fb10d6cd24aaa590393870e6655697cd69d5553881ac8519e1282e7d3ae5fc26d7452d097651c00000000000000000000010000000000000000000000000000000000000000000000000000000000000004000000000445fb0b010000000000000000000000000000000000576f726d686f6c6552656c617965720100000004000000000000000000000000cc680d088586c09c3e0e099a676fa4b6e42467b4",
  ];

  for (const vaa of toSign) {
    // Overwrite the existing signatures with whatever is in our guardian set
    const resignedVaa = guardians.setSignatures(encoding.hex.decode(vaa));
    // Print the resigned VAA
    console.log(encoding.hex.encode(serialize(resignedVaa)));
  }
})();
